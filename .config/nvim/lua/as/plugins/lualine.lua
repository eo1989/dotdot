-- local M = {--   requires = {--     'lualine',--     'swenv.api',--   },--   pyversion = vim.fn.system('python --version'):match("%d.*%d")-- }-- local function get_venv()--   local res = M.swenv.api(get_venv())-- end-- local ok, lualine = pcall(require, 'lualine')-- if not ok then--   returnreturn function()local function diff_source()  local gitsigns = vim.b.gitsigns_status_dict  if gitsigns then    return {      added = gitsigns.added,      modified = gitsigns.changed,      removed = gitsigns.removed,    }  endendlocal function lsp_msgs()  local ret = ""  for _, client in ipairs(vim.lsp.get_active_clients()) do    if client.name == 'null-ls' then      goto continue    end  for _, progress in pairs(client.messages.progress) do    if not progress.done then      ret = progress.title      if progress.message then        ret = ret .. " " .. progress.message      end      if progress.percentage then        ret = string.format("%s %[%d%%]", ret, progress.percentage)      end      return ret    end  end  ::continue::  endend-- vim.defer_fn(function()-- local ok, lualine as.require('lualine')-- local ok, lualine = pcall(require, 'lualine')-- if ok then return end  require 'lualine'.setup({    options = {      theme = 'auto',      globalstatus = true,      icons_enabled = true,      section_separators = { left = '', right = '' },      component_separators = { left = '', right = '' },      disabled_filetypes = {        winbar = { "qf" },      },    },    extensions = {      'quickfix',      'symbols-outline',      'fzf',      'nvim-dap-ui',      'neo-tree',      'toggleterm',      -- {      --   sections = { lualine_a = { 'filetype' } },      --   sections_inactive = { lualine_a = { 'filetype' } },      -- },    },    sections = {      lualine_a = {        'mode',      },      lualine_b = {        {          'fileformat',          symbols = {            -- unix = '', -- 'uf302'            mac = '', -- 'uf302',          },        },        {          'filename',          file_status = true,          path = 0,        },      'branch',        { "diff", source = diff_source },      },      lualine_c = {        {          'diagnostics',          update_in_insert = false,          sources = { "nvim_diagnostic" },          sections = { "error", "warn" },        },      },      lualine_x = {        { lsp_msgs },        -- { 'overseer', unique = true },      },      lualine_y = {        {          'filetype',          icon_only = true        },        'progress',      },      lualine_z = {        'location',      },    },  })end-- end)-- function()--     require('lualine').setup({--       options = {--         theme = 'onedark'--       }--     })---- end--