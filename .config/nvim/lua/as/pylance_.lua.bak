local M = {}

-- local lspconfig = require('lspconfig')
local config = require('lspconfig.configs')
local util = require('lspconfig.util')
local pylance_home = vim.fs.normalize('~/.config/opt/pylance/2022.10.31')

vim.cmd [[ let $ELECTRON_RUN_AS_NODE = 1 ]]
vim.cmd [[ let $VSCODE_NLS_CONFIG = '{"locale": "en"}' ]]

-- local config = function()
M.config.pylance = {
  default_config = {
    -- cmd = { "node", pylance_home .. "/dist/server.bundle.js", "--stdio" },
    cmd = { "pylance", "--stdio" },
    filetypes = { "python" },
    single_file_supprt = true,
    -- capabilities = require("as.servers").config(),
    capabilities = vim.lsp.protocol.make_client_capabilities,
    root_dir = function(fname)
      return util.root_pattern(".git", "setup.py", "setup.cfg", "pyproject.toml", "requirements.txt", "poetry.lock", "Pipfile", "pyrightconfig.json")(fname) or
      util.path.dirname(fname)
    end,
    settings = {
      editor = {
        formatOnType = false
      },
      python = {
        analysis = {
          autoSearchPaths = true,
          useLibraryCodeForTypes = true,
          diagnosticMode = 'workspace',
          typeCheckingMode = 'off',
          completeFunctionParens = true,
          indexing = false, --for now
          inlayHints = {
            variableTypes = false,
            functionReturnTypes = true
          },
        };
      };
    };
  }
}
-- end
return M
-- return lspconfig.pylance.setup(configs)[1]
