#!/usr/bin/env bash

# Delete (1 or more) selected application(s)
# mnemonic [B]rew [C]lean [P]ackage (uninstall)
bcp() {
  local uninst=$(brew leaves | fzf -m)

  if [[ $uninst ]]; then
    for prog in $(echo $uninst);
    do; brew uninstall $prog; done;
  fi
}

# Install (1+) selected apps
# using 'brew search' as input
# mnemonic [B]rew [I]nstall [P]lugin
bip() {
    local inst=$(brew search "$@" | fzf -m)

    if [[ $inst ]]; then
        for prg in $(echo $inst); do;
        brew install $prg; done;
    fi
}

# Upgrade (1+) selected apps
# using 'brew leaves' as input
# mnemonic [B]rew [U]pgrade [P]lugin
bup() {
    local upd=$(brew leaves | fzf -m)

    if [[ $upd ]]; then
        for prog in $(echo $upd);
        do; brew upgrade $prog; done;
    fi
}

# Install or open the webpage for the selected application
# using cask search as input search
# and display an info quickview window for the currently marked app
binn() {
  local token

  token=$(brew search --casks "$1" | fzf-tmux --query="$1" +m --preview 'brew info {}')

  if [ "x$token" != "x" ]
  then
    echo "(I)nstall or open the (h)omepage of $token"
    read input
    if [ $input = "i" ] || [ $input = "I" ]; then
      brew install --cask $token
    fi
    if [ $input = "h" ] || [ $input = "H" ]; then
      brew home $token
    fi
  fi
}

# Uninstall or open the webpage for the selected application 
# using brew list as input source (all brew cask installed applications) 
# and display a info quickview window for the currently marked application
bunn() {
    local token
    token=$(brew list --casks | fzf-tmux --query="$1" +m --preview 'brew info {}')

    if [ "x$token" != "x" ]
    then
        echo "(U)ninstall or open the (h)omepae of $token"
        read input
        if [ $input = "u" ] || [ $input = "U" ]; then
            brew uninstall --cask $token
        fi                             
        if [ $input = "h" ] || [ $token = "h" ]; then
            brew home $token
      fi
    fi
}
